[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rd-sharma-question-extractor"
version = "1.0.0"
description = "A Retrieval-Augmented Generation (RAG) pipeline for extracting mathematical questions from RD Sharma Class 12 textbook"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "RD Sharma Question Extractor Team", email = "support@rdsharma-extractor.com"}
]
keywords = ["mathematics", "education", "rag", "llm", "latex", "question-extraction"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Text Processing :: Markup :: LaTeX"
]

dependencies = [
    "groq>=1.0.0",
    "langchain>=0.1.0",
    "faiss-cpu>=1.7.0",
    "PyMuPDF>=1.23.0",
    "easyocr>=1.7.0",
    "sentence-transformers>=2.2.0",
    "spacy>=3.5.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "matplotlib>=3.5.0",
    "Pillow>=9.0.0",
    "requests>=2.28.0",
    "python-dotenv>=0.19.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=1.0.0"
]
notebooks = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.0.0"
]

[project.scripts]
rd-sharma-extract = "src.main:app"

[project.urls]
Homepage = "https://github.com/rd-sharma-extractor/question-extractor"
Documentation = "https://rd-sharma-extractor.readthedocs.io"
Repository = "https://github.com/rd-sharma-extractor/question-extractor"
Issues = "https://github.com/rd-sharma-extractor/question-extractor/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov"
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "easyocr.*",
    "fitz.*",
    "spacy.*"
]
ignore_missing_imports = true 